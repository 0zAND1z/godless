// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/johnny-morrice/godless (interfaces: KvNamespace)

package mock_godless

import (
	gomock "github.com/golang/mock/gomock"
	godless "github.com/johnny-morrice/godless"
)

// Mock of KvNamespace interface
type MockKvNamespace struct {
	ctrl     *gomock.Controller
	recorder *_MockKvNamespaceRecorder
}

// Recorder for MockKvNamespace (not exported)
type _MockKvNamespaceRecorder struct {
	mock *MockKvNamespace
}

func NewMockKvNamespace(ctrl *gomock.Controller) *MockKvNamespace {
	mock := &MockKvNamespace{ctrl: ctrl}
	mock.recorder = &_MockKvNamespaceRecorder{mock}
	return mock
}

func (_m *MockKvNamespace) EXPECT() *_MockKvNamespaceRecorder {
	return _m.recorder
}

func (_m *MockKvNamespace) IsChanged() bool {
	ret := _m.ctrl.Call(_m, "IsChanged")
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockKvNamespaceRecorder) IsChanged() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "IsChanged")
}

func (_m *MockKvNamespace) Persist() (godless.KvNamespace, error) {
	ret := _m.ctrl.Call(_m, "Persist")
	ret0, _ := ret[0].(godless.KvNamespace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKvNamespaceRecorder) Persist() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Persist")
}

func (_m *MockKvNamespace) Replicate(_param0 godless.RemoteStoreAddress, _param1 godless.KvQuery) {
	_m.ctrl.Call(_m, "Replicate", _param0, _param1)
}

func (_mr *_MockKvNamespaceRecorder) Replicate(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Replicate", arg0, arg1)
}

func (_m *MockKvNamespace) Reset() {
	_m.ctrl.Call(_m, "Reset")
}

func (_mr *_MockKvNamespaceRecorder) Reset() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Reset")
}

func (_m *MockKvNamespace) RunKvQuery(_param0 *godless.Query, _param1 godless.KvQuery) {
	_m.ctrl.Call(_m, "RunKvQuery", _param0, _param1)
}

func (_mr *_MockKvNamespaceRecorder) RunKvQuery(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RunKvQuery", arg0, arg1)
}

func (_m *MockKvNamespace) RunKvReflection(_param0 godless.APIReflectRequest, _param1 godless.KvQuery) {
	_m.ctrl.Call(_m, "RunKvReflection", _param0, _param1)
}

func (_mr *_MockKvNamespaceRecorder) RunKvReflection(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RunKvReflection", arg0, arg1)
}
