// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/johnny-morrice/godless (interfaces: NamespaceTree,NamespaceTreeReader)

package mock_godless

import (
	gomock "github.com/golang/mock/gomock"
	godless "github.com/johnny-morrice/godless"
)

// Mock of NamespaceTree interface
type MockNamespaceTree struct {
	ctrl     *gomock.Controller
	recorder *_MockNamespaceTreeRecorder
}

// Recorder for MockNamespaceTree (not exported)
type _MockNamespaceTreeRecorder struct {
	mock *MockNamespaceTree
}

func NewMockNamespaceTree(ctrl *gomock.Controller) *MockNamespaceTree {
	mock := &MockNamespaceTree{ctrl: ctrl}
	mock.recorder = &_MockNamespaceTreeRecorder{mock}
	return mock
}

func (_m *MockNamespaceTree) EXPECT() *_MockNamespaceTreeRecorder {
	return _m.recorder
}

func (_m *MockNamespaceTree) JoinTable(_param0 string, _param1 godless.Table) error {
	ret := _m.ctrl.Call(_m, "JoinTable", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockNamespaceTreeRecorder) JoinTable(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "JoinTable", arg0, arg1)
}

func (_m *MockNamespaceTree) LoadTraverse(_param0 godless.NamespaceTreeReader) error {
	ret := _m.ctrl.Call(_m, "LoadTraverse", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockNamespaceTreeRecorder) LoadTraverse(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LoadTraverse", arg0)
}

func (_m *MockNamespaceTree) NamespaceLeaf() godless.Namespace {
	ret := _m.ctrl.Call(_m, "NamespaceLeaf")
	ret0, _ := ret[0].(godless.Namespace)
	return ret0
}

func (_mr *_MockNamespaceTreeRecorder) NamespaceLeaf() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NamespaceLeaf")
}

// Mock of NamespaceTreeReader interface
type MockNamespaceTreeReader struct {
	ctrl     *gomock.Controller
	recorder *_MockNamespaceTreeReaderRecorder
}

// Recorder for MockNamespaceTreeReader (not exported)
type _MockNamespaceTreeReaderRecorder struct {
	mock *MockNamespaceTreeReader
}

func NewMockNamespaceTreeReader(ctrl *gomock.Controller) *MockNamespaceTreeReader {
	mock := &MockNamespaceTreeReader{ctrl: ctrl}
	mock.recorder = &_MockNamespaceTreeReaderRecorder{mock}
	return mock
}

func (_m *MockNamespaceTreeReader) EXPECT() *_MockNamespaceTreeReaderRecorder {
	return _m.recorder
}

func (_m *MockNamespaceTreeReader) ReadNamespace(_param0 godless.Namespace) (bool, error) {
	ret := _m.ctrl.Call(_m, "ReadNamespace", _param0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNamespaceTreeReaderRecorder) ReadNamespace(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReadNamespace", arg0)
}
