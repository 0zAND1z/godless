// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/johnny-morrice/godless (interfaces: RemoteStore)

package mock_godless

import (
	gomock "github.com/golang/mock/gomock"
	godless "github.com/johnny-morrice/godless"
)

// Mock of RemoteStore interface
type MockRemoteStore struct {
	ctrl     *gomock.Controller
	recorder *_MockRemoteStoreRecorder
}

// Recorder for MockRemoteStore (not exported)
type _MockRemoteStoreRecorder struct {
	mock *MockRemoteStore
}

func NewMockRemoteStore(ctrl *gomock.Controller) *MockRemoteStore {
	mock := &MockRemoteStore{ctrl: ctrl}
	mock.recorder = &_MockRemoteStoreRecorder{mock}
	return mock
}

func (_m *MockRemoteStore) EXPECT() *_MockRemoteStoreRecorder {
	return _m.recorder
}

func (_m *MockRemoteStore) Add(_param0 godless.RemoteNamespaceRecord) (godless.RemoteStoreIndex, error) {
	ret := _m.ctrl.Call(_m, "Add", _param0)
	ret0, _ := ret[0].(godless.RemoteStoreIndex)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRemoteStoreRecorder) Add(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Add", arg0)
}

func (_m *MockRemoteStore) Cat(_param0 godless.RemoteStoreIndex) (godless.RemoteNamespaceRecord, error) {
	ret := _m.ctrl.Call(_m, "Cat", _param0)
	ret0, _ := ret[0].(godless.RemoteNamespaceRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRemoteStoreRecorder) Cat(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Cat", arg0)
}

func (_m *MockRemoteStore) Connect() error {
	ret := _m.ctrl.Call(_m, "Connect")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRemoteStoreRecorder) Connect() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Connect")
}

func (_m *MockRemoteStore) Disconnect() error {
	ret := _m.ctrl.Call(_m, "Disconnect")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRemoteStoreRecorder) Disconnect() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Disconnect")
}
